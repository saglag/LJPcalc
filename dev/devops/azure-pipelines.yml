trigger:
- master

strategy:
  matrix:
    MacOS:
      imageName: 'macOS-latest'
    Linux:
      imageName: 'ubuntu-latest'
    Windows:
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

variables:
  buildConfiguration: 'Release'

steps:

### INSTALL NUGET AND RESTORE PACKAGES

- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'

- task: NuGetCommand@2
  displayName: 'Full package restoration'
  inputs:
    restoreSolution: 'src/LJPcalcSolution.sln'
    
### BUILD LJPmath
- task: DotNetCoreCLI@2
  displayName: 'Build LJPmath'
  inputs:
    command: 'build'
    projects: 'src/LJPmath/*.csproj'

### BUILD LJPtest
- task: DotNetCoreCLI@2
  displayName: 'Build LJPtest'
  inputs:
    command: 'build'
    projects: 'src/LJPtest/*.csproj'

### RUN LJPtest TESTS
- task: DotNetCoreCLI@2
  displayName: 'Run Tests'
  inputs:
    command: test
    projects: 'src/LJPtest/*.csproj'

### BUILD LJPconsole
- task: DotNetCoreCLI@2
  displayName: 'Build LJPconsole'
  inputs:
    command: 'build'
    projects: 'src/LJPconsole/*.csproj'

### BUILD LJPcalc (Windows only)
- task: DotNetCoreCLI@2
  displayName: 'Build LJPcalc for Windows'
  inputs:
    command: 'build'
    projects: 'src/LJPcalc/*.csproj'

### BUILD LJPapp for Android (Windows only)
- task: DotNetCoreCLI@2
  displayName: 'Build LJPapp for Android'
  condition: contains(variables['agent.os'], 'Windows')
  inputs:
    command: 'build'
    projects: 'src/LJPapp/LJPapp/LJPapp.Android/*.csproj'

### BUILD LJPapp for iPhone (MacOS only)
- task: DotNetCoreCLI@2
  displayName: 'Build LJPapp for iOS'
  condition: contains(variables['agent.os'], 'Darw')
  inputs:
    command: 'build'
    projects: 'src/LJPapp/LJPapp/LJPapp.iOS/*.csproj'